// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no submit if form validation fails 1`] = `
Array [
  Object {
    "name": "current value of name",
    "phone": "current value of phone",
  },
]
`;

exports[`options passed to createReducer 1`] = `
Array [
  Object {
    "fields": Array [
      Object {
        "label": "The name",
        "name": "name",
        "type": "text",
      },
      Object {
        "label": "The phone",
        "name": "phone",
        "type": "text",
      },
    ],
    "initialValues": Immutable.Map {},
    "options": Object {
      "optional": "yes",
    },
  },
]
`;

exports[`reset dispatches action with derived intial state 1`] = `
Array [
  Array [
    Object {
      "label": "The name",
      "name": "name",
      "type": "text",
    },
    Object {
      "label": "The phone",
      "name": "phone",
      "type": "text",
    },
  ],
  Immutable.Map {
    "nested": Immutable.Map {
      "name": "old name",
    },
    "id": "id",
  },
  Object {},
]
`;

exports[`reset dispatches action with derived intial state 2`] = `
Array [
  Object {
    "payload": "derived-initial-state",
    "type": "reset",
  },
]
`;

exports[`returns array of form props 1`] = `
Array [
  Object {
    "name": Object {
      "label": "The name",
      "value": "current value of name",
    },
    "phone": Object {
      "label": "The phone",
      "value": "current value of phone",
    },
  },
  Object {
    "Form": [Function],
    "addField": [Function],
    "getAnyTouched": [Function],
    "getIsPristine": [Function],
    "removeField": [Function],
    "reset": [Function],
    "setValue": [Function],
    "submit": [Function],
  },
]
`;

exports[`valid form submits values  1`] = `
Array [
  "merged form values",
]
`;

exports[`valid form submits values  2`] = `
Array [
  Immutable.Map {
    "fields": Immutable.Map {
      "nested.name": Immutable.Map {
        "initial": Immutable.Map {
          "type": undefined,
          "label": undefined,
        },
        "current": Immutable.Map {
          "value": "current value of nested.name",
        },
      },
      "phone": Immutable.Map {
        "initial": Immutable.Map {
          "type": undefined,
          "label": undefined,
        },
        "current": Immutable.Map {
          "value": "current value of phone",
        },
      },
    },
  },
  Immutable.Map {
    "nested": Immutable.Map {
      "name": "old name",
    },
    "id": "id",
  },
]
`;
