// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`add 1`] = `
Array [
  Array [
    Object {
      "label": "First",
      "name": "first",
    },
  ],
  Immutable.Map {},
  Object {},
  "fieldName",
  1,
]
`;

exports[`add 2`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": "fields gotten",
    "type": "addListItem",
  },
]
`;

exports[`add will trigger custom validation 1`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": Object {
      "error": true,
      "helperText": "i am error",
    },
    "type": "validationResult",
  },
]
`;

exports[`add will trigger validation 1`] = `
Array [
  Object {
    "fieldName": "colors.items.1.fields.shades.items.0.fields.shade",
    "payload": Object {
      "error": true,
      "helperText": "i am error",
    },
    "type": "validationResult",
  },
]
`;

exports[`add will trigger validation 2`] = `
Array [
  Immutable.List [
    Immutable.Map {
      "fields": Immutable.Map {
        "first": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "label": "First",
            "field": "initialFirstField",
          },
          "current": Immutable.Map {
            "error": "false",
            "helperText": "",
            "value": "1",
          },
        },
        "second": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "label": "Second",
            "field": "initialSecondField",
          },
          "current": Immutable.Map {
            "error": "false",
            "helperText": "",
            "value": "2",
          },
        },
      },
    },
    Immutable.Map {},
  ],
  "colors.1.shades.0.shade",
  "getAllValuesFunc",
]
`;

exports[`add with values 1`] = `
Array [
  Array [
    Object {
      "label": "First",
      "name": "first",
    },
  ],
  Immutable.Map {
    "first": "111",
  },
  Object {},
  "fieldName",
  1,
]
`;

exports[`add with values 2`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": "fields gotten",
    "type": "addListItem",
  },
]
`;

exports[`remove 1`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": 1,
    "type": "removeListItem",
  },
]
`;

exports[`remove will trigger custom validation 1`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": Object {
      "error": true,
      "helperText": "i am error",
    },
    "type": "validationResult",
  },
]
`;

exports[`remove will trigger validation 1`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": Object {
      "error": false,
      "helperText": "",
    },
    "type": "validationResult",
  },
]
`;

exports[`returns props needed 1`] = `
Object {
  "props": Object {
    "add": [Function],
    "error": false,
    "helperText": "help me",
    "id": "fieldName",
    "items": Array [
      Object {
        "first": Object {
          "error": "false",
          "helperText": "",
          "id": "fieldName.0-first",
          "label": "First",
          "onBlur": [Function],
          "onChange": [Function],
          "value": "1",
        },
        "key": "fieldName.0",
        "second": Object {
          "error": "false",
          "helperText": "",
          "id": "fieldName.0-second",
          "label": "Second",
          "onBlur": [Function],
          "onChange": [Function],
          "value": "2",
        },
      },
    ],
    "label": "the label",
    "remove": [Function],
    "updateIndex": [Function],
  },
  "setValue": [Function],
}
`;

exports[`setValue will set list items 1`] = `
Array [
  Object {
    "fields": Array [
      Object {
        "label": "First",
        "name": "first",
      },
    ],
    "name": "data.nested",
    "type": "list",
  },
  Immutable.Map {
    "data": Immutable.Map {
      "nested": Immutable.List [
        "item1",
        "item2",
      ],
    },
  },
  Object {},
]
`;

exports[`setValue will set list items 2`] = `
Array [
  Object {
    "fieldName": "data.nested",
    "payload": Immutable.List [
      Immutable.Map {
        "value": "item1",
      },
      Immutable.Map {
        "value": "item2",
      },
    ],
    "type": "updateList",
  },
]
`;

exports[`setValue will set list items 3`] = `
Array [
  Object {
    "fieldName": "data.nested",
    "payload": Object {
      "error": false,
      "helperText": "",
    },
    "type": "validationResult",
  },
]
`;

exports[`updateIndex will dispatch action 1`] = `
Array [
  Object {
    "fieldName": "fieldName",
    "payload": Object {
      "fromIndex": 0,
      "toIndex": 4,
    },
    "type": "updateListIndex",
  },
]
`;
